{"version":3,"file":"static/js/693.11ae7a25.chunk.js","mappings":"4RAEaA,E,QAAcC,EAAAA,GAAH,iE,SC6DxB,EAxDgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CAEA,IAAMQ,EAAU,mCAAG,2FACjBF,GAAa,GADI,mBAIIG,EAAAA,EAAAA,IAAkBT,GAJtB,OAITU,EAJS,OAKfN,EAAeM,EAAKC,SALL,gDAOfC,QAAQC,MAAR,MAPe,yBASfP,GAAa,GATE,4EAAH,qDAYhBE,GAdoB,CAerB,GAAE,CAACR,KAGF,0BACGK,IACC,SAAC,IAAD,WACE,SAAC,KAAD,CACES,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,eAI1DjB,GAAsC,IAAvBA,EAAYkB,OAC1BlB,EAAYmB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACd,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADK,KAOhB,UAAC3B,EAAD,YACE,uBAAG,aACH,uBAAG,wBACH,uBAAG,mDAKZ,C,sEC3DY4B,E,QAAgB3B,EAAAA,IAAH,qE,mMCApB4B,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAiB,mCAAG,6FAC/BL,EAAQM,IAAM,gDADiB,SAERC,EAAAA,EAAAA,QAAcP,GAFN,uBAEvBjB,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,qDAMjByB,EAAe,mCAAG,WAAMnC,GAAN,gFAC7B2B,EAAQM,IAAR,6CAAoDjC,GADvB,SAENkC,EAAAA,EAAAA,QAAcP,GAFR,uBAErBjB,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,sDAMf0B,EAAc,mCAAG,WAAMpC,GAAN,gFAC5B2B,EAAQM,IAAR,6CAAoDjC,EAApD,YAD4B,SAELkC,EAAAA,EAAAA,QAAcP,GAFT,uBAEpBjB,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,2CAAH,sDAMdD,EAAiB,mCAAG,WAAMT,GAAN,gFAC/B2B,EAAQM,IAAR,6CAAoDjC,EAApD,YAD+B,SAERkC,EAAAA,EAAAA,QAAcP,GAFN,uBAEvBjB,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,sDAMjB2B,EAAc,mCAAG,WAAMC,GAAN,gFAC5BX,EAAQM,IAAR,4CACAN,EAAQY,OAAS,CAAEC,MAAM,GAAD,OAAKF,IAFD,SAGLJ,EAAAA,EAAAA,QAAcP,GAHT,uBAGpBjB,EAHoB,EAGpBA,KAHoB,kBAIrBA,GAJqB,2CAAH,qD","sources":["components/MovieDetails/Reviews.styled.jsx","components/MovieDetails/Reviews.jsx","components/commonCss.styled.jsx","requests.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const OopsContent = styled.li`\n  font-size: 14px;\n  list-style: none;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ColorRing } from 'react-loader-spinner';\nimport { getReviewsDetails } from 'requests';\nimport { LoaderWrapper } from '../commonCss.styled';\nimport { OopsContent } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsData, setReviewsData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const getReviews = async () => {\n      setIsLoading(true);\n\n      try {\n        const data = await getReviewsDetails(movieId);\n        setReviewsData(data.results);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {isLoading && (\n        <LoaderWrapper>\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </LoaderWrapper>\n      )}\n      {reviewsData && reviewsData.length !== 0 ? (\n        reviewsData.map(({ author, content, id }) => (\n          <li key={id}>\n            <h4>{author}</h4>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <OopsContent>\n          <p>OOPS...</p>\n          <p>We are very sorry!</p>\n          <p>We don't have any reviews for this movie.</p>\n        </OopsContent>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import axios from 'axios';\n\nconst OPTIONS = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0YTA1ZGZhMzkwMDIxYjkyZTc3ZDMzYzRhODYyZjRmNiIsInN1YiI6IjY0ODFmZWJmNjQ3NjU0MDBhZDgxYTBlMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.grPFkj7_KdeogJCliXg4MDIgfDdRvjZd4DM3BdVB2Kw',\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  OPTIONS.url = 'https://api.themoviedb.org/3/trending/all/day';\n  const { data } = await axios.request(OPTIONS);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  OPTIONS.url = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const { data } = await axios.request(OPTIONS);\n  return data;\n};\n\nexport const getCastDetails = async movieId => {\n  OPTIONS.url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  const { data } = await axios.request(OPTIONS);\n  return data;\n};\n\nexport const getReviewsDetails = async movieId => {\n  OPTIONS.url = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  const { data } = await axios.request(OPTIONS);\n  return data;\n};\n\nexport const getSearchQuery = async search => {\n  OPTIONS.url = `https://api.themoviedb.org/3/search/movie`;\n  OPTIONS.params = { query: `${search}` };\n  const { data } = await axios.request(OPTIONS);\n  return data;\n};\n"],"names":["OopsContent","styled","movieId","useParams","useState","reviewsData","setReviewsData","isLoading","setIsLoading","useEffect","getReviews","getReviewsDetails","data","results","console","error","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","length","map","author","content","id","LoaderWrapper","OPTIONS","method","headers","accept","Authorization","getTrendingMovies","url","axios","getMovieDetails","getCastDetails","getSearchQuery","search","params","query"],"sourceRoot":""}