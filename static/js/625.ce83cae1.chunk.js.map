{"version":3,"file":"static/js/625.ce83cae1.chunk.js","mappings":"mOAGaA,GAAcC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,oFAOXE,EAAYF,EAAAA,EAAAA,GAAH,sF,wMCRTG,EAAmBH,EAAAA,EAAAA,GAAH,uHAQhBI,EAAYJ,EAAAA,EAAAA,GAAH,+LAQTK,EAAYL,EAAAA,EAAAA,GAAH,+EAMTM,EAAYN,EAAAA,EAAAA,EAAH,+EAMTO,EAAYP,EAAAA,EAAAA,IAAH,yH,mBC0DtB,EAzEa,WACX,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAsBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CAEA,IAAMQ,EAAO,mCAAG,2FACdF,GAAa,GADC,mBAIOG,EAAAA,EAAAA,IAAeT,GAJtB,OAINU,EAJM,OAKZN,EAAYM,EAAKC,MALL,gDAOZC,QAAQC,MAAR,MAPY,yBASZP,GAAa,GATD,4EAAH,qDAYbE,GAdoB,CAerB,GAAE,CAACR,KAGF,gCACGK,IACC,SAAC,IAAD,WACE,SAAC,KAAD,CACES,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,gBAI3D,SAACzB,EAAD,UACGQ,GAAgC,IAApBA,EAASkB,OACpBlB,EAASmB,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OACX,SAAC9B,EAAD,WACE,UAACG,EAAD,YACE,SAAC,KAAD,CACE4B,IACEJ,EAAY,0CAC2BA,GA3CvD,8EA8CcP,MAAO,IACPY,IAAI,YAEN,4BACE,SAAC/B,EAAD,UAAY2B,KACZ,SAAC1B,EAAD,UAAY2B,WAbFC,EADL,KAoBb,UAAC,IAAD,YACE,uBAAG,aACH,uBAAG,wBACH,uBAAG,qDAMd,C,kMCnFYG,EAAmBrC,EAAAA,EAAAA,IAAH,0CAIhBsC,EAAwBtC,EAAAA,EAAAA,IAAH,wDAKrBuC,GAAWvC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,0KAWRwC,EAAaxC,EAAAA,EAAAA,IAAH,2CAIVyC,EAAazC,EAAAA,EAAAA,GAAH,0C,sECzBV0C,E,QAAgB1C,EAAAA,IAAH,qE,mMCApB2C,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAiB,mCAAG,6FAC/BL,EAAQM,IAAM,gDADiB,SAERC,EAAAA,EAAAA,QAAcP,GAFN,uBAEvBzB,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,qDAMjBiC,EAAe,mCAAG,WAAM3C,GAAN,gFAC7BmC,EAAQM,IAAR,6CAAoDzC,GADvB,SAEN0C,EAAAA,EAAAA,QAAcP,GAFR,uBAErBzB,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,sDAMfD,EAAc,mCAAG,WAAMT,GAAN,gFAC5BmC,EAAQM,IAAR,6CAAoDzC,EAApD,YAD4B,SAEL0C,EAAAA,EAAAA,QAAcP,GAFT,uBAEpBzB,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,2CAAH,sDAMdkC,EAAiB,mCAAG,WAAM5C,GAAN,gFAC/BmC,EAAQM,IAAR,6CAAoDzC,EAApD,YAD+B,SAER0C,EAAAA,EAAAA,QAAcP,GAFN,uBAEvBzB,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,sDAMjBmC,EAAc,mCAAG,WAAMC,GAAN,gFAC5BX,EAAQM,IAAR,4CACAN,EAAQY,OAAS,CAAEC,MAAM,GAAD,OAAKF,IAFD,SAGLJ,EAAAA,EAAAA,QAAcP,GAHT,uBAGpBzB,EAHoB,EAGpBA,KAHoB,kBAIrBA,GAJqB,2CAAH,qD","sources":["components/Gallery/GalleryList.styled.jsx","components/MovieDetails/Cast.styled.jsx","components/MovieDetails/Cast.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/commonCss.styled.jsx","requests.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ToMovieLink = styled(Link)`\n  color: #bf4f74;\n  &:visited {\n    color: #665fac;\n  }\n`;\n\nexport const MovieItem = styled.li`\n  font-weight: bold;\n  font-size: 14px;\n  list-style: none;\n`;\n","import styled from '@emotion/styled';\n\nexport const MovieItemWrapper = styled.ul`\n  display: flex;\n  list-style: none;\n  padding-left: 0px;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const Actorcard = styled.li`\n  border-radius: 4px 4px 4px 4px;\n  -moz-border-radius: 4px 4px 4px 4px;\n  -webkit-border-radius: 4px 4px 4px 4px;\n  border: 0.5px solid #665fac;\n  padding: 5px;\n`;\n\nexport const ActorName = styled.h4`\n  font-size: 12px;\n  max-width: 100px;\n  margin: 0;\n`;\n\nexport const ActorRole = styled.p`\n  font-size: 12px;\n  max-width: 150px;\n  margin: 0;\n`;\n\nexport const ActorItem = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ColorRing } from 'react-loader-spinner';\nimport { getCastDetails } from 'requests';\nimport { LoaderWrapper } from '../commonCss.styled';\nimport { MovieItem } from '../Gallery/GalleryList.styled';\nimport {\n  MovieItemWrapper,\n  Actorcard,\n  ActorName,\n  ActorRole,\n  ActorItem,\n} from './Cast.styled';\nimport { MovieImage } from './MovieDetails.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castData, setCastData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const getCast = async () => {\n      setIsLoading(true);\n\n      try {\n        const data = await getCastDetails(movieId);\n        setCastData(data.cast);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && (\n        <LoaderWrapper>\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </LoaderWrapper>\n      )}\n      <MovieItemWrapper>\n        {castData && castData.length !== 0 ? (\n          castData.map(({ profile_path, name, character, id }) => (\n            <Actorcard key={id}>\n              <ActorItem>\n                <MovieImage\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : defaultImg\n                  }\n                  width={150}\n                  alt=\"poster\"\n                />\n                <div>\n                  <ActorName>{name}</ActorName>\n                  <ActorRole>{character}</ActorRole>\n                </div>\n              </ActorItem>\n            </Actorcard>\n          ))\n        ) : (\n          <MovieItem>\n            <p>OOPS...</p>\n            <p>We are very sorry!</p>\n            <p>We don't have any reviews for this movie.</p>\n          </MovieItem>\n        )}\n      </MovieItemWrapper>\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const GalleryContainer = styled.div`\n  padding: 10px;\n`;\n\nexport const GalleryContentWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const BackLink = styled(Link)`\n  display: block;\n  font-size: 14px;\n  font-weight: bold;\n  color: #bf4f74;\n  &:visited {\n    color: #665fac;\n  }\n  padding-bottom: 15px;\n`;\n\nexport const MovieImage = styled.img`\n  display: block;\n`;\n\nexport const MovieTitle = styled.h2`\n  color: #7c2f48;\n`;\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import axios from 'axios';\n\nconst OPTIONS = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0YTA1ZGZhMzkwMDIxYjkyZTc3ZDMzYzRhODYyZjRmNiIsInN1YiI6IjY0ODFmZWJmNjQ3NjU0MDBhZDgxYTBlMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.grPFkj7_KdeogJCliXg4MDIgfDdRvjZd4DM3BdVB2Kw',\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  OPTIONS.url = 'https://api.themoviedb.org/3/trending/all/day';\n  const { data } = await axios.request(OPTIONS);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  OPTIONS.url = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const { data } = await axios.request(OPTIONS);\n  return data;\n};\n\nexport const getCastDetails = async movieId => {\n  OPTIONS.url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  const { data } = await axios.request(OPTIONS);\n  return data;\n};\n\nexport const getReviewsDetails = async movieId => {\n  OPTIONS.url = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  const { data } = await axios.request(OPTIONS);\n  return data;\n};\n\nexport const getSearchQuery = async search => {\n  OPTIONS.url = `https://api.themoviedb.org/3/search/movie`;\n  OPTIONS.params = { query: `${search}` };\n  const { data } = await axios.request(OPTIONS);\n  return data;\n};\n"],"names":["ToMovieLink","styled","Link","MovieItem","MovieItemWrapper","Actorcard","ActorName","ActorRole","ActorItem","movieId","useParams","useState","castData","setCastData","isLoading","setIsLoading","useEffect","getCast","getCastDetails","data","cast","console","error","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","length","map","profile_path","name","character","id","src","alt","GalleryContainer","GalleryContentWrapper","BackLink","MovieImage","MovieTitle","LoaderWrapper","OPTIONS","method","headers","accept","Authorization","getTrendingMovies","url","axios","getMovieDetails","getReviewsDetails","getSearchQuery","search","params","query"],"sourceRoot":""}